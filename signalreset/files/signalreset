#!/bin/sh
. /usr/share/libubox/jshn.sh

THRESHOLD=$(uci -q get signalreset.signalreset.threshold)
CHECK_PERIOD=$(uci -q get signalreset.signalreset.check_period)
reconnect() {
    AT_RESULT=$(gsmctl -A ""AT+COPS=2"" -O $1)

    case "$AT_RESULT" in
    *OK*) logger "[SIGNALRESET] $1 modem turned OFF" ;;
    *) logger "[SIGNALRESET] ERROR turning $1 modem OFF" ;;
    esac

    sleep 5
    AT_RESULT=$(gsmctl -A ""AT+COPS=0"" -O $1)
    case "$AT_RESULT" in
    *OK*) logger "[SIGNALRESET] $1 modem turned ON" ;;
    *) logger "[SIGNALRESET] ERROR turning $1 modem ON" ;;
    esac

}

#checks if the modem is active.
is_active() {
    AT_RESULT=$(gsmctl -A ""AT"" -O $1)

    case "$AT_RESULT" in
    *OK*) RESULT=1 ;;
    *) RESULT=0 ;;
    esac
}

#parses modems from json file and adds them to ACTIVE_MODEMS array.
parse_modems() {
    json_init
    json_load_file /etc/board.json

    if json_is_a modems array; then
        json_select modems
        idx=1
        while json_is_a ${idx} object; do ## iterate over data inside "lan" object
            json_get_var section $idx
            json_select $idx
            json_get_var id id $section

            echo "$id"
            is_active $id
            if [[ $RESULT -eq 1 ]]; then
                ACTIVE_MODEMS="${ACTIVE_MODEMS} $id"
                echo "added: $id"
            fi

            idx=$((idx + 1))
            json_select ".."
        done
    fi
    echo "Parse done"

}

parse_modems

while true; do
    for MODEM in ${ACTIVE_MODEMS}; do
        signal=$(gsmctl --signal -O $MODEM)
        logger "[SIGNALRESET] $MODEM modem signal: $signal"
        if [[ $signal -lt $THRESHOLD ]]; then
            logger "[SIGNALRESET] $signal is less than $THRESHOLD"
            logger "[SIGNALRESET] Restarting modem.."
            reconnect $MODEM
        fi
    done

    sleep $CHECK_PERIOD
done
